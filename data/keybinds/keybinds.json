[
  {
    "key": "escape",
    "command": "feb.escape",
    "when": "editorHasSelection && editorTextFocus"
  },
  {
    "key": "escape",
    "command": "leadermode.exit",
    "when": "leadermode.isActive"
  },
  {
    "key": "escape",
    "command": "-cancelSelection",
    "when": "editorHasSelection && textInputFocus"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "ctrl+o",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "alt+q",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "ctrl+.",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+d alt+d",
    "command": "editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+down",
    "command": "-editor.action.copyLinesDownAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+up",
    "command": "-editor.action.copyLinesUpAction",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "ctrl+s",
    "command": "-workbench.action.files.save"
  },
  {
    "key": "ctrl+b",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+g",
    "command": "-workbench.action.gotoLine"
  },
  {
    "key": "ctrl+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "escape escape",
    "command": "-workbench.action.exitZenMode",
    "when": "inZenMode"
  },
  {
    "key": "ctrl+alt+d",
    "command": "cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "alt+d alt+w",
    "command": "deleteInsideWord"
  },
  {
    "key": "ctrl+shift+w",
    "command": "group.close"
  },
  {
    "key": "shift+delete",
    "command": "editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+shift+k",
    "command": "-editor.action.deleteLines",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "ctrl+alt+=",
    "command": "-editor.action.inlineEdit.jumpBack",
    "when": "cursorAtInlineEdit && !editorReadonly"
  },
  {
    "key": "ctrl+alt+=",
    "command": "-editor.action.inlineEdit.jumpTo",
    "when": "inlineEditVisible && !cursorAtInlineEdit && !editorReadonly"
  },
  {
    "key": "ctrl+alt+=",
    "command": "-editor.action.inlineEdit.trigger",
    "when": "!editorReadonly && !inlineEditVisible"
  },
  {
    "key": "ctrl+alt+=",
    "command": "workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+k z",
    "command": "-workbench.action.toggleZenMode",
    "when": "!isAuxiliaryWindowFocusedContext"
  },
  {
    "key": "ctrl+alt+s",
    "command": "workbench.action.toggleStatusbarVisibility"
  },
  {
    "key": "ctrl+l",
    "command": "-leadermode.enter",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFolderViaWorkspace",
    "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFile",
    "when": "false"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openFileFolder",
    "when": "isMacNative && openFolderWorkspaceSupport"
  },
  {
    "key": "cmd+o",
    "command": "-workbench.action.files.openLocalFileFolder",
    "when": "remoteFileDialogVisible"
  },
  {
    "key": "cmd+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "shift+cmd+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "shift+ctrl+p",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "f1",
    "command": "-workbench.action.showCommands"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpen"
  },
  {
    "key": "cmd+p",
    "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
    "when": "inFilesPicker && inQuickOpen"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.terminal.runRecentCommand",
    "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "cmd+r",
    "command": "-python.refreshTensorBoard",
    "when": "python.hasActiveTensorBoardSession"
  },
  {
    "key": "cmd+r",
    "command": "-workbench.action.reloadWindow",
    "when": "isDevelopment"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "ctrl+r",
    "command": "workbench.action.openRecent"
  },
  {
    "key": "alt+space",
    "command": "-workbench.action.terminal.sendSequence",
    "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "ctrl+shift+alt+cmd+m",
    "command": "feb.leadermode"
  },
  {
    "key": "cmd+.",
    "command": "-notebook.cell.openFailureActions",
    "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
  },
  {
    "key": "cmd+.",
    "command": "-editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
  },
  {
    "key": "cmd+.",
    "command": "-workbench.action.terminal.showQuickFixes",
    "when": "terminalFocus"
  },
  {
    "key": "cmd+.",
    "command": "-acceptSelectedCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "cmd+.",
    "command": "-editor.changeDropType",
    "when": "dropWidgetVisible"
  },
  {
    "key": "cmd+.",
    "command": "-editor.changePasteType",
    "when": "pasteWidgetVisible"
  },
  {
    "key": "cmd+.",
    "command": "-problems.action.showQuickFixes",
    "when": "problemFocus"
  },
  {
    "key": "cmd+.",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "ctrl+.",
    "command": "editor.toggleFold",
    "when": "editorTextFocus && foldingEnabled"
  },
  {
    "key": "cmd+l",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "cmd+l",
    "command": "-expandLineSelection",
    "when": "textInputFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-editor.action.previousMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.findPrevious",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
  },
  {
    "key": "shift+cmd+g",
    "command": "-workbench.action.terminal.openDetectedLink",
    "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
  },
  {
    "key": "shift+cmd+g",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  {
    "key": "cmd+w",
    "command": "-workbench.action.closeWindow",
    "when": "!editorIsOpen && !multipleEditorGroups"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeEditorsInGroup"
  },
  {
    "key": "cmd+k w",
    "command": "-workbench.action.closeEditorsInGroup"
  }
]